@model IEnumerable<Ece_Berker_Project.Models.Yorum>
@inject UserManager<YorumluoUser> UserManager
@inject SignInManager<YorumluoUser> SignInManager
<style>
    .user-wrapper {
    }

    .category-name {
        margin-right: 10px;
    }

    .user-comment {
        font-size: 10pt;
    }
</style>


<h6 class="border-bottom border-gray pb-2 mb-0">Son Yorumlar</h6>

@{
    Task<YorumluoUser> GetCurrentUserAsync() => UserManager.GetUserAsync(User);

    var user = await GetCurrentUserAsync();



}
<main role="main" class="container">

    <div class="my-3 p-3 bg-white rounded box-shadow">
        @foreach (var item in Model)
        {


            <div class="media text-muted pt-3">
                <img data-src="holder.js/32x32?theme=thumb&amp;bg=007bff&amp;fg=007bff&amp;size=1" alt="32x32" class="mr-2 rounded" style="width: 32px; height: 32px;" src="~/img/" data-holder-rendered="true">
                <div class="media-body pb-3 mb-0 small lh-125 border-bottom border-gray">
                    <strong class="d-block text-gray-dark">@item.UserName</strong>
                    <span class="badge badge-primary category-name">@item.Category.Name</span>
                    <span class="user-comment">
                        @item.Title
                    </span>
                    <span class="float-right">
                        @item.PostDate
                    </span>

                    @if (SignInManager.IsSignedIn(User))
                    {

                        if (user.UserCode == item.UserName)
                        {
                            <a class="float-right" asp-action="Delete" asp-route-id="@item.Id">Delete</a>

                        }
                    }

                </div>

            </div>
        }
    </div>
</main>
