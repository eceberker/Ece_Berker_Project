@using Microsoft.AspNetCore.Identity
@model Ece_Berker_Project.ViewModel.ProfileViewModel
@inject UserManager<YorumluoUser> UserManager
@inject SignInManager<YorumluoUser> SignInManager
@{
    <title>@Model.UserCode</title>

}
@{
    Task<YorumluoUser> GetCurrentUserAsync() => UserManager.GetUserAsync(User);

    var user = await GetCurrentUserAsync();

    var url = Model.User.PhotoPath;


}

<div class="row mb-2 mt-5">
    <div class="col-md-12 rounded">
        <div class="card flex-md-row mb-4 box-shadow h-md-250 rounded">
            <img class="card-img-right flex-auto d-none d-md-block" data-src="~/img/nopp.jpg" alt="Thumbnail [200x250]" style="width: 200px; height: 250px;" src="~/img/@Model.User.PhotoPath" data-holder-rendered="true">
            <div class="card-body d-flex flex-column align-items-start">

                <h3 class="mb-0">
                    <a class="text-dark" href="#">@Model.User.UserCode</a>
                </h3>

                <p class="card-text mb-auto">@Model.User.Bio</p>

                @if (SignInManager.IsSignedIn(User))
                {


                    if (user.UserCode == Model.User.UserCode)
                    {
                        <a class="float-right btn disabled" asp-controller="Account" asp-action="Follow" asp-route-id="@Model.User.Id">Takip Et</a>
                    }
                    else
                    {
                        if (Model.User.IsFollowed != true)
                        {
                            <a class="float-right" asp-controller="Account" asp-action="Follow" asp-route-id="@Model.User.Id">Takip Et</a>
                        }
                        else
                        {
                            <a class="float-right" asp-controller="Account" asp-action="Follow" asp-route-id="@Model.User.Id">Takibi Bırak</a>
                        }

                    }

                }

            </div>
            
        </div>
    </div>
</div>
<div>
    @if (SignInManager.IsSignedIn(User))
    {


        if (user.UserCode == Model.User.UserCode)
        {
            @Html.Partial("_NewYorum", new Ece_Berker_Project.Models.Yorum())
        }
    }


</div>
<nav>
    <div class="nav nav-tabs" id="nav-tab" role="tablist">
        <a class="nav-item nav-link active" id="nav-home-tab" data-toggle="tab" href="#nav-home" role="tab" aria-controls="nav-home" aria-selected="true">Yorumlar</a>
        <a class="nav-item nav-link" id="nav-profile-tab" data-toggle="tab" href="#nav-profile" role="tab" aria-controls="nav-profile" aria-selected="false">Beğeniler</a>

    </div>
</nav>
<div class="tab-content" id="nav-tabContent">
    <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">@await Component.InvokeAsync("YorumViewComponent", new { id = Model.User.UserCode })</div>
    <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">@await Component.InvokeAsync("ProfileLikeViewComponent", new { id = Model.User.Id })</div>

</div>